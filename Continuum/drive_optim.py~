import os
import numpy as np
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
from scipy.interpolate import interp1d
import cmath as cma
# from time import time,gmtime, strftime
import sys

from astropy import constants as const

HOME = os.environ.get('HOME')
include_path = HOME + '/gitcommon/Slab/Continuum/'
sys.path.append(include_path)

import AModelSED 


ZSetup = AModelSED.Setup(
    filetag='',  # False
    Verbose=True,
    PrintChi2s=True,
    ClearOutputDir=False,
    nf=None,
    kf=None,
    GenFigs=True,
    opct_file='opct_mix.txt',
    VerboseInit=False,
    outputdir='./output_dev/')


obsfreqs = np.array([100E9,150E9,230E9,345E9])

save_mockdata = np.zeros((len(obsfreqs),2))
save_prof[:,0] = rrs
save_prof[:,1] = v_Phi_prof
save_prof[:,2] = sv_Phi_prof

N_freqs = 100
lognu1 = np.log10(30E9)
lognu2 = np.log10(700E9)
lognus = lognu1 + (np.arange(N_freqs) / N_freqs) * (lognu2 - lognu1)
nus = 10**lognus

ZSED = AModelSED.MSED(
    ZSetup,
    Tdust=30.,
    q_dustexpo=-3.5,
    f_grain=1.,  # grain filling factor
    amin=1E-3,  # cm
    amax=1.,  # cm, maximum grain size
    Sigma_g=0.5,  # g/cm2
    gtod_ratio=100.,
    rho0=2.77,  # g/cm3
    N_asizes=40,
    nus=nus)

ZSED.get_kappa_as()
ZSED.get_taus_and_kappas()
ZSED.get_Inus()
ZSED.get_Plot()




            
        fileout_radialprofile=re.sub('fullim.fits', 'radial_profile.dat', filename_fullim)
        np.savetxt(fileout_radialprofile, save_prof)   # x,y,z equal sized 1D arrays


# import SEDOptim
